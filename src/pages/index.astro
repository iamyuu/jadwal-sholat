---
import { getCityByUser } from '../services/city';
import { getNextPrayerTime } from '../services/prayer-time';
import Html from '../components/html.astro';
import CountdownTimer from '../components/countdown-timer.svelte';

// Get prayer time based on user's city (based on Cloudflare geolocation)
// @ts-expect-error -- `cf` only available on Cloudflare, not on local dev
const cf = Astro.locals.runtime?.cf;
const userCity = getCityByUser(cf);
const prayerTime = await getNextPrayerTime(userCity.id, cf);

// TODO: set manually city
// Cloudflare geolocation is not 100% accurate

// transform city name to lowercase and remove `kota` word
const displayCity = userCity?.lokasi.toLowerCase().replace('kota', '');

export const prerender = false;
---

<Html>
	<section aria-label='card prayer time' class='bg-card flex flex-col justify-between mx-auto p-4 rounded-2xl shadow-sm w-72 h-72'>
		<div class='flex justify-between items-center text-2xl'>
			<span aria-label='sholat berikutnya' class='text-highlight text-2xl capitalize'>{prayerTime.name}</span>
			<svg width='32' height='32' class='opacity-75'>
				<use href={`/sprite.svg#${prayerTime.name}`}></use>
			</svg>
		</div>
		<div class='flex flex-col font-light'>
			<div class='flex items-center space-x-1'>
				<svg width='16' height='16'>
					<use href='/sprite.svg#tabler-map-pin'></use>
				</svg>
				<small aria-label='lokasi saya' class='capitalize'>{displayCity}</small>
			</div>
			<time aria-label='waktu sholat berikutnya' datetime={prayerTime.time} class='font-semibold text-heading text-5xl'>{prayerTime.time}</time>
			<CountdownTimer client:load prayerTime={prayerTime.time} isNextDay={prayerTime.isNextDay} />
		</div>
	</section>
</Html>
